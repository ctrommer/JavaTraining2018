
______________________________________________________________________________________________________

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	Das ganze so umwandeln, dass jede Methode eine kleine Aufgabe mit Beschreibung ist.
	
	Problem:
		- comparator ist OK: Bei jeder Methode kommt eine Kleinigkeit hinzu 
		- vergleicher ist daran angelehnt. Dadurch ist aber zu viel in einer Methode. 

	Zur Not:
		- weiter Hinweise dranschreiben, die bei der Lösung helfen
	

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
______________________________________________________________________________________________________




Kann ich auch Comparable selber basteln "Vergleichbar" ? 

***

Mal Beispiel mit super machen:
Comparator<? super T> real

***

super / extends auseinanderklamüsern ( In Übung reinbringen ) 
Objects.requireNonNull(keyExtractor); nicht vergessen -> mit Unittest sicherstellen?

 public static <T, U> Comparator<T> comparing(
            Function<? super T, ? extends U> keyExtractor,
            Comparator<? super U> keyComparator)
    {
        Objects.requireNonNull(keyExtractor);


***

In sinnvolles Beispiel umwandeln:

Erst mal die Grundlagen der Method Referenz:

https://www.codementor.io/eh3rrera/using-java-8-method-reference-du10866vx

https://stackoverflow.com/questions/25606906/sonar-replace-this-lambda-with-a-method-reference

https://stackoverflow.com/questions/22444731/java-8-maptoint-and-tointfunction-examples



***
